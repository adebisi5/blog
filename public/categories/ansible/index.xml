<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ansible on Love FOSS and Gaming</title>
    <link>https://jlozadad.io/categories/ansible/</link>
    <description>Recent content in ansible on Love FOSS and Gaming</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>jlozada2426@protonmail.com (Jonathan Lozada De La Matta)</managingEditor>
    <webMaster>jlozada2426@protonmail.com (Jonathan Lozada De La Matta)</webMaster>
    <lastBuildDate>Sun, 01 Jul 2018 10:09:41 -0400</lastBuildDate>
    
	<atom:link href="https://jlozadad.io/categories/ansible/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Infoblox and Ansible</title>
      <link>https://jlozadad.io/post/infoblox_and_ansible/</link>
      <pubDate>Sun, 01 Jul 2018 10:09:41 -0400</pubDate>
      <author>jlozada2426@protonmail.com (Jonathan Lozada De La Matta)</author>
      <guid>https://jlozadad.io/post/infoblox_and_ansible/</guid>
      <description>I was working with a customer that was using Infoblox and Bluecat. From the research I done, most organizations out there use infoblox for everything network related and don&amp;#8217;t divide it between different applications to accomplish the same goal. In this case infoblox handled most of the networking parts ( IP &amp;amp; subnets ) and bluecat handled the DNS part. So to be able to take full advantage of the Nios modules in ansible, you need to create the DNS zones in infoblox.</description>
    </item>
    
    <item>
      <title>Use Ansible to Resolve IT Issues Part 2</title>
      <link>https://jlozadad.io/post/use_ansible_to_resolve2/</link>
      <pubDate>Mon, 08 May 2017 15:51:12 -0400</pubDate>
      <author>jlozada2426@protonmail.com (Jonathan Lozada De La Matta)</author>
      <guid>https://jlozadad.io/post/use_ansible_to_resolve2/</guid>
      <description>After being able automate user creation/deletion, I tackle on how to automate the Cloudera CM install as much as possible. I first started trying to install the rpms with ansible. I discovered the yum and repo modules. They allow me to add a repo and install any rpm available. This what I have:
- name: Add the cloudera-cm repo. yum_repository: name: cloudera-cm description: cloudera-cm repo baseurl: &amp;quot;{{ rpm_repo }}&amp;quot; # http://archive.</description>
    </item>
    
    <item>
      <title>Using Ansible to Resolve IT Issues Part 1</title>
      <link>https://jlozadad.io/post/use_ansible_to_resolve/</link>
      <pubDate>Mon, 08 May 2017 13:32:05 -0400</pubDate>
      <author>jlozada2426@protonmail.com (Jonathan Lozada De La Matta)</author>
      <guid>https://jlozadad.io/post/use_ansible_to_resolve/</guid>
      <description>After spending months on trying to deploy a Cloudera CM cluster with over 40 nodes, I needed to find a way automate most of my tasks and reduce time spend doing this manually. At the time when I started on this project we were using openstack VM&#39;s to host this Cloudera cluster. Although is not best practices to use VM for big data, it was our only option of having resources.</description>
    </item>
    
  </channel>
</rss>