<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Love FOSS and Gaming</title>
    <link>https://jlozada2426.gitlab.io/blog/</link>
    <description>Recent content on Love FOSS and Gaming</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>jlozada2426@protonmail.com (Jonathan Lozada De La Matta)</managingEditor>
    <webMaster>jlozada2426@protonmail.com (Jonathan Lozada De La Matta)</webMaster>
    <lastBuildDate>Fri, 21 Jul 2017 21:52:43 -0400</lastBuildDate>
    
	<atom:link href="https://jlozada2426.gitlab.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>upgrading_fedora25</title>
      <link>https://jlozada2426.gitlab.io/blog/post/upgrading_fedora25/</link>
      <pubDate>Fri, 21 Jul 2017 21:52:43 -0400</pubDate>
      <author>jlozada2426@protonmail.com (Jonathan Lozada De La Matta)</author>
      <guid>https://jlozada2426.gitlab.io/blog/post/upgrading_fedora25/</guid>
      <description>With the release of Fedora 26, I decided to upgrade my Fedora 25. Fedora 26 introduced a lot of cool things and I have been using the beta version on my work laptop. You can do upgrade by doing the following: * sudo dnf install fedora-upgrade * sudo fedora-upgrade
And just let all the packages go! then restart. I use the KDE version since I prefer it over GNOME.</description>
    </item>
    
    <item>
      <title>ansible_tower</title>
      <link>https://jlozada2426.gitlab.io/blog/post/ansible_tower/</link>
      <pubDate>Fri, 21 Jul 2017 21:51:50 -0400</pubDate>
      <author>jlozada2426@protonmail.com (Jonathan Lozada De La Matta)</author>
      <guid>https://jlozada2426.gitlab.io/blog/post/ansible_tower/</guid>
      <description>So you have an idea what is ansible and what you can do with it. After creating, playbooks &amp;amp; roles and dynamic inventories, you are wondering how you can centralize and control access to your playbooks. You can do this with ansible core and limit access and permissions on the git project. You can include all the playbooks, roles and inventory files in the same repo. But, this can become a problem once the project is git clone into the controller and anyone access to the server can potentially be able to access your playbooks.</description>
    </item>
    
    <item>
      <title>Use Ansible to Resolve IT Issues Part 2</title>
      <link>https://jlozada2426.gitlab.io/blog/post/use_ansible_to_resolve2/</link>
      <pubDate>Mon, 08 May 2017 15:51:12 -0400</pubDate>
      <author>jlozada2426@protonmail.com (Jonathan Lozada De La Matta)</author>
      <guid>https://jlozada2426.gitlab.io/blog/post/use_ansible_to_resolve2/</guid>
      <description>After being able automate user creation/deletion, I tackle on how to automate the Cloudera CM install as much as possible. I first started trying to install the rpms with ansible. I discovered the yum and repo modules. They allow me to add a repo and install any rpm available. This what I have:
- name: Add the cloudera-cm repo. yum_repository: name: cloudera-cm description: cloudera-cm repo baseurl: &amp;quot;{{ rpm_repo }}&amp;quot; # http://archive.</description>
    </item>
    
    <item>
      <title>Install libvirtd</title>
      <link>https://jlozada2426.gitlab.io/blog/post/install_libvirt/</link>
      <pubDate>Mon, 08 May 2017 13:32:05 -0400</pubDate>
      <author>jlozada2426@protonmail.com (Jonathan Lozada De La Matta)</author>
      <guid>https://jlozada2426.gitlab.io/blog/post/install_libvirt/</guid>
      <description>Recently I installed Fedora 25 to test some playbooks and other configurations. A co-worker mentioned to use Vagrant but, my exposure was minimal. I only used vagrant to test some applications such as netbox and it uses Virtualbox by default. Previously I have used Virtualbox and Vmware but, I decided to move away from those. First, Virtualbox breaks everytime there is a kernel update. Although there is some commands you can run to recreate the kernel it needs but, why I should do this all the time?</description>
    </item>
    
    <item>
      <title>Using Ansible to Resolve IT Issues Part 1</title>
      <link>https://jlozada2426.gitlab.io/blog/post/use_ansible_to_resolve/</link>
      <pubDate>Mon, 08 May 2017 13:32:05 -0400</pubDate>
      <author>jlozada2426@protonmail.com (Jonathan Lozada De La Matta)</author>
      <guid>https://jlozada2426.gitlab.io/blog/post/use_ansible_to_resolve/</guid>
      <description>After I was able to successfully Install Cloudera CM and create a cluster, I was trying to find a way to reduce the deployment time. The current deployments would take too long, waste over 500 of labor hours and no consistency. I could not meet customer demand for new datanodes or clusters and had a reduced workforce due to contract changes. At first I tried to find an all solution like puppet or foreman.</description>
    </item>
    
    <item>
      <title>Big Data on Openstack</title>
      <link>https://jlozada2426.gitlab.io/blog/post/big_data_on_openstack/</link>
      <pubDate>Mon, 08 May 2017 11:52:33 -0400</pubDate>
      <author>jlozada2426@protonmail.com (Jonathan Lozada De La Matta)</author>
      <guid>https://jlozada2426.gitlab.io/blog/post/big_data_on_openstack/</guid>
      <description>Openstack can be a great solution due to the increase demand of cloud and more resources. But, it can&amp;rsquo;t resolve every issue out there. an Openstack deployment can provide &amp;ldquo;unlimited&amp;rdquo; resources but, is useless if is not architectured for the specific applications that the VM&amp;rsquo;s will be hosting. For example, a previous customer had over 20 regions, configured almost the same and had performance issues. This customer hosted big data applications (Cloudera to be specific) on those VM&amp;rsquo;s, had an older deployment of Openstack ( Icehouse so we could not take advantage of the newer cloud features) and no budget for further expansion and upgrades ( Including software and hardware) but, had the following issues:</description>
    </item>
    
  </channel>
</rss>